stages:
  - trigger_jenkins

# Установка зависимостей один раз для всех jobs
before_script:
  - apt-get update -qq && apt-get install -y -qq jq curl

trigger_jenkins_on_approved_mr:
  stage: trigger_jenkins
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && 
           $CI_MERGE_REQUEST_TARGET_BRANCH == "main" && 
           $CI_MERGE_REQUEST_SOURCE_BRANCH == "dev"'
  script:
    - |
      # Проверка статуса апрува через API
      API_RESPONSE=$(curl -s --header "PRIVATE-TOKEN: $API_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID")
      
      APPROVED=$(echo "$API_RESPONSE" | jq -r '.approved')
      MERGE_STATUS=$(echo "$API_RESPONSE" | jq -r '.merge_status')

      if [ "$APPROVED" = "true" ] && [ "$MERGE_STATUS" = "can_be_merged" ]; then
        echo "=== MR APPROVED ==="
        echo "Triggering Jenkins for MR !${CI_MERGE_REQUEST_IID}"
        
        curl -X POST \
          "${JENKINS_URL}/generic-webhook-trigger/invoke?token=MR_APPROVED_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
            "event": "merge_request_approved",
            "merge_request": {
              "id": "'"${CI_MERGE_REQUEST_IID}"'",
              "source_branch": "dev",
              "target_branch": "main",
              "status": "approved",
              "web_url": "'"${CI_MERGE_REQUEST_PROJECT_URL}"'/-/merge_requests/'"${CI_MERGE_REQUEST_IID}"'"
            },
            "project": {
              "name": "'"${CI_PROJECT_NAME}"'",
              "url": "'"${CI_PROJECT_URL}"'"
            }
          }'
      else
        echo "=== MR NOT READY ==="
        echo "Approved: $APPROVED"
        echo "Merge Status: $MERGE_STATUS"
        echo "Jenkins trigger skipped."
      fi
