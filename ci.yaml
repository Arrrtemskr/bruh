stages:
  - check_approval

check_mr_approval:
  stage: check_approval
  image: alpine:latest  # Используем чистый Alpine образ с apk
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  before_script:
    - apk add --no-cache curl jq  # Устанавливаем зависимости
  script:
    - |
      echo "=== Старт проверки MR ==="
      echo "ID MR: $CI_MERGE_REQUEST_IID"
      echo "Ветка: $CI_MERGE_REQUEST_SOURCE_BRANCH → $CI_MERGE_REQUEST_TARGET_BRANCH"

      API_RESPONSE=$(curl -s --header "PRIVATE-TOKEN: $API_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID")
      
      echo "Ответ API: $API_RESPONSE"
      
      APPROVED=$(echo "$API_RESPONSE" | jq -r '.approved')
      MERGE_STATUS=$(echo "$API_RESPONSE" | jq -r '.merge_status')

      echo "Статус апрува: $APPROVED"
      echo "Статус мержа: $MERGE_STATUS"

      if [ "$APPROVED" = "true" ] && [ "$MERGE_STATUS" = "can_be_merged" ]; then
        echo "✅ MR одобрен и готов к мержу! Триггерим Jenkins..."
        
        curl -X POST "${JENKINS_URL}/generic-webhook-trigger/invoke?token=MR_APPROVED_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
            "mr_id": "'"${CI_MERGE_REQUEST_IID}"'",
            "status": "approved"
          }'
      else
        echo "❌ Условия не выполнены: approved=$APPROVED, merge_status=$MERGE_STATUS"
        exit 1
      fi
