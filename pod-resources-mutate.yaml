apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: podresourcelimits
spec:
  crd:
    spec:
      names:
        kind: PodResourceLimits
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package podresourcelimits

        # Глобальная переменная namespace
        ns_name = input.review.object.metadata.namespace

        # Проверка restricted namespace
        is_restricted_ns {
          data.inventory.namespace[ns_name].metadata.labels["operations.gatekeeper.policy.dev"] == "restricted"
        }

        # Проверка необходимости изменений
        needs_cpu_limit(resources) {
          not resources.limits
        } else {
          resources.limits.cpu != "50m"
        }

        needs_mem_limit(resources) {
          not resources.limits
        } else {
          resources.limits.memory != "50Mi"
        }

        needs_cpu_request(resources) {
          not resources.requests
        } else {
          resources.requests.cpu != "50m"
        }

        needs_mem_request(resources) {
          not resources.requests
        } else {
          resources.requests.memory != "50Mi"
        }

        # Мутации
        mutation := {
          "apiVersion": "v1",
          "kind": "Pod",
          "operations": make_operations(input.review.object.spec.containers[0])
        } if {
          input.review.object.kind == "Pod"
          is_restricted_ns
          count(make_operations(input.review.object.spec.containers[0])) > 0
        }

        make_operations(container) = ops {
          resources := object.get(container, "resources", {})
          ops := [
            {"operation": "add", "path": "/spec/containers/0/resources/limits/cpu", "value": "50m"} |
            needs_cpu_limit(resources)
          ] + [
            {"operation": "add", "path": "/spec/containers/0/resources/limits/memory", "value": "50Mi"} |
            needs_mem_limit(resources)
          ] + [
            {"operation": "add", "path": "/spec/containers/0/resources/requests/cpu", "value": "50m"} |
            needs_cpu_request(resources)
          ] + [
            {"operation": "add", "path": "/spec/containers/0/resources/requests/memory", "value": "50Mi"} |
            needs_mem_request(resources)
          ]
        }

        # Правила violation
        violation[{"msg": "CPU limit must be exactly 50m"}] {
          input.review.object.kind == "Pod"
          is_restricted_ns
          resources := input.review.object.spec.containers[0].resources
          needs_cpu_limit(resources)
        }

        violation[{"msg": "Memory limit must be exactly 50Mi"}] {
          input.review.object.kind == "Pod"
          is_restricted_ns
          resources := input.review.object.spec.containers[0].resources
          needs_mem_limit(resources)
        }

        violation[{"msg": "CPU request must be exactly 50m"}] {
          input.review.object.kind == "Pod"
          is_restricted_ns
          resources := input.review.object.spec.containers[0].resources
          needs_cpu_request(resources)
        }

        violation[{"msg": "Memory request must be exactly 50Mi"}] {
          input.review.object.kind == "Pod"
          is_restricted_ns
          resources := input.review.object.spec.containers[0].resources
          needs_mem_request(resources)
        }
